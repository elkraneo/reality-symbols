% warning = "This file was automatically generated and should not be edited."
// ${warning}

import Foundation
import RealityKit

public enum EntityType: CaseIterable, Codable {
% import json
% with open('Extracted/Unified/Processed/Entities.json') as file:
  % data = json.load(file)
  % for entity in data:
    % if entity:
  case ${entity["name"][0].lower() + entity["name"][1:]}
    %end
  %end
%end
}

extension EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return "${entity["name"]}"
    %end
    }
  }
}

#if os(iOS)

% with open('Extracted/iOS/Processed/Entities.json') as file:
  % data = json.load(file)
extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    default:
      fatalError()
    }
  }
}

#elseif os(macOS)

% with open('Extracted/macOS/Processed/Entities.json') as file:
  % data = json.load(file)
extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    default:
      fatalError()
    }
  }
}

#elseif os(visionOS)

% with open('Extracted/xrOS/Processed/Entities.json') as file:
  % data = json.load(file)
extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    default:
      fatalError()
    }
  }
}

#endif
