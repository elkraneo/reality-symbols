import Foundation
import RealityKit

#if os(iOS)

public enum EntityType: CaseIterable, Codable {
%{
  import json
}%
% with open('Resources/iOS/Processed/Entities.json') as file:
    % data = json.load(file)
    % for entity in data["entities"]:
%{
code = entity[0].lower() + entity[1:]
}%
        % if code:
    case ${code}
        %end
    %end
%end
}

extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return ${entity}.self
    %end
    }
  }
}

extension EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return "${entity}"
    %end
    }
  }
}

#elseif os(macOS)

public enum EntityType: CaseIterable, Codable {
%{
  import json
}%
% with open('Resources/macOS/Processed/Entities.json') as file:
    % data = json.load(file)
    % for entity in data["entities"]:
%{
code = entity[0].lower() + entity[1:]
}%
        % if code:
    case ${code}
        %end
    %end
%end
}

extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return ${entity}.self
    %end
    }
  }
}

extension EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return "${entity}"
    %end
    }
  }
}

#elseif os(visionOS)

public enum EntityType: CaseIterable, Codable {
%{
  import json
}%
% with open('Resources/xrOS/Processed/Entities.json') as file:
    % data = json.load(file)
    % for entity in data["entities"]:
%{
code = entity[0].lower() + entity[1:]
}%
        % if code:
    case ${code}
        %end
    %end
%end
}

extension EntityType {
  public var type: RealityKit.Entity.Type {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return ${entity}.self
    %end
    }
  }
}

extension EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data["entities"]:
    case .${entity[0].lower() + entity[1:]}:
      return "${entity}"
    %end
    }
  }
}

#endif
