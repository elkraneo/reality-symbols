% warning = "This file was automatically generated and should not be edited."
// ${warning}

import Foundation
import RealityKit
% import json
% with open('../Extracted/iOS/Processed/Entities.json') as file:
% data = json.load(file)

extension RealityPlatform.iOS {
  public enum EntityType: CaseIterable, Codable {
    % for entity in data:
      % if entity:
    case ${entity["name"][0].lower() + entity["name"][1:]}
      %end
    %end
  %end
  }
}

extension RealityPlatform.iOS.EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return "${entity["name"]}"
    %end
    }
  }
}

#if os(iOS)

extension RealityPlatform.iOS.EntityType {
  public var rawType: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    }
  }
}

#endif
% with open('../Extracted/macOS/Processed/Entities.json') as file:
% data = json.load(file)

extension RealityPlatform.macOS {
  public enum EntityType: CaseIterable, Codable {
    % for entity in data:
      % if entity:
    case ${entity["name"][0].lower() + entity["name"][1:]}
      %end
    %end
  %end
  }
}

extension RealityPlatform.macOS.EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return "${entity["name"]}"
    %end
    }
  }
}

#if os(macOS)

extension RealityPlatform.macOS.EntityType {
  public var rawType: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    }
  }
}

#endif
% with open('../Extracted/visionOS/Processed/Entities.json') as file:
% data = json.load(file)

extension RealityPlatform.visionOS {
  public enum EntityType: CaseIterable, Codable {
    % for entity in data:
      % if entity:
    case ${entity["name"][0].lower() + entity["name"][1:]}
      %end
    %end
  %end
  }
}

extension RealityPlatform.visionOS.EntityType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return "${entity["name"]}"
    %end
    }
  }
}

#if os(visionOS)

extension RealityPlatform.visionOS.EntityType {
  public var rawType: RealityKit.Entity.Type {
    switch self {
    % for entity in data:
    case .${entity["name"][0].lower() + entity["name"][1:]}:
      return ${entity["name"]}.self
    %end
    }
  }
}

#endif

