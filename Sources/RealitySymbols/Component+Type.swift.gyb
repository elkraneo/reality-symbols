import Foundation
import RealityKit

#if os(iOS)

public enum ComponentType: CaseIterable, Codable {
% import json
% with open('Resources/iOS/Processed/Components.json') as file:
  % data = json.load(file)
  % for component in data:
    % if component:
  case ${component["name"][0].lower() + component["name"][1:]}
    %end
  %end
%end
}

extension ComponentType {
  public var type: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}

extension ComponentType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return "${component["name"]}"
    %end
    }
  }
}

#elseif os(macOS)

public enum ComponentType: CaseIterable, Codable {
% import json
% with open('Resources/macOS/Processed/Components.json') as file:
  % data = json.load(file)
  % for component in data:
    % if component:
  case ${component["name"][0].lower() + component["name"][1:]}
    %end
  %end
%end
}

extension ComponentType {
  public var type: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}

extension ComponentType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return "${component["name"]}"
    %end
    }
  }
}

#elseif os(visionOS)

public enum ComponentType: CaseIterable, Codable {
% import json
% with open('Resources/xrOS/Processed/Components.json') as file:
  % data = json.load(file)
  % for component in data:
    % if component:
  case ${component["name"][0].lower() + component["name"][1:]}
    %end
  %end
%end
}

extension ComponentType {
  public var type: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}

extension ComponentType: CustomStringConvertible {
  public var description: String {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return "${component["name"]}"
    %end
    }
  }
}

#endif
